{
	"input_elements": [
		{
			"target": {
				"target_ids": ["SingleCell10xUnsupervisedWorkflow.zipped_fastqs"],
				"name": "input_files",
				"handler": "input_mapping.py"
			},
			"display_element": {
				"type": "file_chooser",
                "regex_filter": ".*.tar.gz",
				"label": "Input files:",
				"choose_multiple": true,
				"description": "Choose input fastq-format files to analyze.  Files should end with \"_R1.fastq.gz\" or \"_R2.fastq.gz\".  Unpaired files will be ignored and NOT analyzed."
			}
        },
		{
			"target": {
                "target_ids": [
					"SingleCell10xUnsupervisedWorkflow.genome",
					"SingleCell10xUnsupervisedWorkflow.zipped_cellranger_reference",
                    "SingleCell10xUnsupervisedWorkflow.zipped_scmatch_reference"
                    ],
				"name": "genome_choice",
				"handler": "genome_mapper.py"
			},
			"display_element": {
				"type": "select",
				"label": "Reference genome",
				"description": "Choose the reference genome to use for this process.",
				"choices": [
					{
						"value": "Ensembl Homo sapiens GRCh38",
						"display": "Ensembl Homo sapiens GRCh38"
					},
					{
						"value": "Ensembl Homo sapiens GRCh37",
						"display": "Ensembl Homo sapiens GRCh37 (hg19)"
					}
				]
			}
		},
		{
			"target":"SingleCell10xUnsupervisedWorkflow.samplename",
			"display_element": {
				"type": "text",
				"label": "Sample name:",
				"description": "Name the sample. The name will be propogated through the pipeline and to your output."
			}
		},
		{
			"target":"SingleCell10xUnsupervisedWorkflow.output_zip_name",
			"display_element": {
				"type": "text",
				"label": "Output zip-archive name:",
				"description": "Name the output file.  Result will be a \"zip\" archive.  If you enter \"my_output\", then the results will be \"my_output.zip\"."
			}
        },
		{
			"target": "SingleCell10xUnsupervisedWorkflow.git_repo_url",
			"display_element": {
				"type": "dynamic_hidden",
				"handler": "add_git_repo_url.py",
				"context_args": {
					"variable_name": "git_repo_url"
				}
			}
		},
		{
			"target": "SingleCell10xUnsupervisedWorkflow.git_commit_hash",
			"display_element": {
				"type": "dynamic_hidden",
				"handler": "add_git_hash.py",
				"context_args": {
					"variable_name": "git_commit_hash"
				}
			}
		}
	]
}
